parameters:
  buildJavaVersion: ""
  freetypeUri: "https://buildreqs.blob.core.windows.net/freetype/freetype-2.5.3.tar.gz"

steps:
  - bash: |
      printenv
    displayName: "Windows Build: show all env vars"
    condition: eq(variables['system.debug'], 'true')

  # Use the AdoptOpenJDK build scripts to build the OpenJDK8 binaries.
  - script: |
      IF "${{ parameters.buildJavaVersion }}"=="jdk8u" (
        set TOOLCHAIN_VERSION=2010
        set EXTRA_CONFIGURE_ARGS=
        set EXTRA_OPTION=--freetype-tarball-uri ${{ parameters.freetypeUri }}
      )
      IF "${{ parameters.buildJavaVersion }}"=="jdk11u" (
        set TOOLCHAIN_VERSION=2017
        set EXTRA_CONFIGURE_ARGS=--disable-warnings-as-errors
        set EXTRA_OPTION=
      )
      IF "${{ parameters.buildJavaVersion }}"=="jdk" (
        set TOOLCHAIN_VERSION=2017
        set EXTRA_CONFIGURE_ARGS=--disable-warnings-as-errors
        set EXTRA_OPTION=
      )
      bash.exe -c "./makejdk-any-platform.sh --adoptopenjdk-build-repo $(ADOPT_OPENJDK_BUILD_REPO_URI) --repository $(JAVA_SOURCE_REPO_URI) --branch %JAVA_SOURCE_REPO_BRANCH% -J %JDK_BOOT_DIR% --configure-args '%EXTRA_CONFIGURE_ARGS% --with-debug-level=$(BUILD_DEBUG_LEVEL) --with-toolchain-version=%TOOLCHAIN_VERSION%' -d artifacts --target-file-name microsoft-jdk_$(Agent.OSArchitecture)_$(Agent.OS)_hotspot-$(BUILD_DEBUG_LEVEL)_$(Build.BuildId).zip --no-adopt-patches --disable-adopt-branch-safety %EXTRA_OPTION% ${{ parameters.buildJavaVersion }}"
    displayName: "Windows Build: start makejdk-any-platform process"

  # Upload the produced JDK/JRE binary to the build artifact service.
  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: $(Agent.OS)_$(Agent.OSArchitecture)
      targetPath: "workspace/artifacts"
    displayName: "Windows Build: update JKD/JRE artifact"

  - script: |
      cd %BUILD_HSDIS_DIR%
      bash.exe -c "wget https://buildreqs.blob.core.windows.net/binutils/binutils-2.32.tar.xz && tar xvf binutils-2.32.tar.xz && make OS=Linux MINGW=x86_64-w64-mingw32 BINUTILS=binutils-2.32"
    displayName: "Windows Build: create hsdis shared object"
    condition: and(succeeded(), contains(variables.HSDIS_BUILD_PLATFORMS, 'Windows'))

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: "$(Agent.OS)_$(Agent.OSArchitecture)_hsdis"
      targetPath: "$(BUILD_HSDIS_DIR)/build/Linux-amd64/hsdis-amd64.dll"
    displayName: "Windows Build: upload hsdis artifact"
    condition: and(succeeded(), contains(variables.HSDIS_BUILD_PLATFORMS, 'Windows'))
