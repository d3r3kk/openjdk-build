parameters:
  buildJavaVersion: ""
  alsaUri: "https://buildreqs.blob.core.windows.net/alsa/alsa-lib-1.1.6.tar.bz2"

steps:
  - bash: |
      printenv
    displayName: "macOS Build: show all env vars"
    condition: eq(variables['system.debug'], 'true')

  - script: |
      ./makejdk-any-platform.sh \
        --adoptopenjdk-build-repo $(ADOPT_OPENJDK_BUILD_REPO_URI) \
        -J "${JDK_BOOT_DIR}" \
        --repository $(JAVA_SOURCE_REPO_URI) \
        --branch "${JAVA_SOURCE_REPO_BRANCH}" \
        --configure-args "--with-debug-level=$(BUILD_DEBUG_LEVEL)" \
        -d artifacts \
        --target-file-name microsoft-jdk_$(Agent.OSArchitecture)_$(Agent.OS)_hotspot-$(BUILD_DEBUG_LEVEL)_$(Build.BuildId).tar.gz \
        --alsa-tarball-uri ${{ parameters.alsaUri }} \
        --no-adopt-patches \
        --disable-adopt-branch-safety \
        ${{ parameters.buildJavaVersion }}
    displayName: "macOS Build: start makejdk-any-platform process"

  # Upload the produced JDK/JRE binary to the build artifact service.
  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: $(Agent.OS)_$(Agent.OSArchitecture)
      targetPath: "workspace/artifacts"
    displayName: "macOS Build: upload JKD/JRE artifact"

  - script: |
      cd $BUILD_HSDIS_DIR
      wget https://buildreqs.blob.core.windows.net/binutils/binutils-2.30.tar.gz
      tar -xzf binutils-2.30.tar.gz
      make BINUTILS=binutils-2.30 ARCH=amd64
    displayName: "macOS Build: create hsdis shared object"
    condition: and(succeeded(), contains(variables.HSDIS_BUILD_PLATFORMS, 'macOS'))

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: "$(Agent.OS)_$(Agent.OSArchitecture)_hsdis"
      targetPath: "$(BUILD_HSDIS_DIR)/build/macosx-amd64/hsdis-amd64.dylib"
    displayName: "macOS Build: upload hsdis artifact"
    condition: and(succeeded(), contains(variables.HSDIS_BUILD_PLATFORMS, 'macOS'))