# 
# Build template
#
# It defines the stages to build the JDK for different platforms
# 
# @param linuxContainer Container to build the JDK in
# @param buildJavaVersion Java version to build and test, 
#                         e.g., "jdk", "jdk8u", "jdk11u".

parameters:
  linuxContainer: ""
  buildJavaVersion: ""

stages:
  - stage: build_linux_binaries
    variables:
      skipComponentGovernanceDetection: true
    displayName: "Build Linux Binaries"
    dependsOn: []
    condition: or(
        not(variables.BUILD_PLATFORMS),
        eq(variables.BUILD_PLATFORMS, '*'),
        contains(variables.BUILD_PLATFORMS, 'Linux')
      )
    jobs:
      - job: build_linux
        timeoutInMinutes: 120
        displayName: "Build Linux"
        pool:
          vmImage: ubuntu-16.04
        container: ${{ parameters.linuxContainer }}
        steps:
          - template: ../steps/linux/build.yml
            parameters:
              buildJavaVersion: "${{ parameters.buildJavaVersion }}"
      
  - stage: build_macOS_binaries
    variables:
      skipComponentGovernanceDetection: true
    displayName: "Build macOS Binaries"
    dependsOn: []
    condition: or(
        not(variables.BUILD_PLATFORMS),
        eq(variables.BUILD_PLATFORMS, '*'),
        contains(variables.BUILD_PLATFORMS, 'macOS')
      )
    jobs:
      - job: build_macOS
        timeoutInMinutes: 120
        displayName: "Build macOS"
        pool:
          vmImage: macOS-10.14
        steps:
          - template: ../steps/macOS/pre.yml
            parameters:
              stage: "build"
              buildJavaVersion: "${{ parameters.buildJavaVersion }}"
          - template: ../steps/macOS/build.yml
            parameters:
              buildJavaVersion: "${{ parameters.buildJavaVersion }}"

  - stage: build_windows_binaries
    variables:
      skipComponentGovernanceDetection: true
    displayName: "Build Windows Binaries"
    dependsOn: []
    condition: or(
        not(variables.BUILD_PLATFORMS),
        eq(variables.BUILD_PLATFORMS, '*'),
        contains(variables.BUILD_PLATFORMS, 'Windows')
      )
    jobs:
      - job: build_macOS
        timeoutInMinutes: 120
        displayName: "Build Windows"
        pool:
          vmImage: vs2017-win2016
        steps:
          - template: ../steps/windows/pre.yml
            parameters:
              stage: "build"
              buildJavaVersion: "${{ parameters.buildJavaVersion }}"
          - template: ../steps/windows/build.yml
            parameters:
              buildJavaVersion: "${{ parameters.buildJavaVersion }}"
