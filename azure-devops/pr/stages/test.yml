# 
# Test template
#
# It defines the stages to test the JDK for different platforms
# 
# @param linuxContainer Container to test the JDK in
# @param buildJavaVersion Java version to build and test, 
#                         e.g., "jdk", "jdk8u", "jdk11u".

parameters:
    linuxContainer: ""
    buildJavaVersion: ""

stages:
  - stage: test_linux_binaries
    variables:
      skipComponentGovernanceDetection: true
    displayName: "Test Linux Binaries"
    dependsOn: build_linux_binaries
    condition: and(
      or(
        not(variables.BUILD_PLATFORMS),
        eq(variables.BUILD_PLATFORMS, '*'),
        contains(variables.BUILD_PLATFORMS, 'Linux')
      ), succeeded('build_linux_binaries'))
    jobs:
      - job: test_linux
        displayName: "Test Linux"
        pool:
          vmImage: ubuntu-16.04
        container: ${{ parameters.linuxContainer }}
        steps:
          - template: ../steps/linux/test.yml
            parameters:
              buildJavaVersion: "${{ parameters.buildJavaVersion }}"
        strategy:
          matrix:
            JDK_tier1_part1: 
              TEST_RESULTS_ARTIFACT_NAME: "JDK_tier1_part1"
              JTREG_TESTS: "jdk:tier1_part1"
              NATIVE_PATH: "jdk/jtreg/native"
              PROBLEM_LIST: "jdk/ProblemList.txt"
            JDK_tier1_part2: 
              TEST_RESULTS_ARTIFACT_NAME: "JDK_tier1_part2"
              JTREG_TESTS: "jdk:tier1_part2"
              NATIVE_PATH: "jdk/jtreg/native"
              PROBLEM_LIST: "jdk/ProblemList.txt"
            JDK_tier1_part3: 
              TEST_RESULTS_ARTIFACT_NAME: "JDK_tier1_part3"
              JTREG_TESTS: "jdk:tier1_part3"
              NATIVE_PATH: "jdk/jtreg/native"
              PROBLEM_LIST: "jdk/ProblemList.txt"
            